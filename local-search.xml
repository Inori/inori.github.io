<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>齐次坐标与变换的几何解释</title>
    <link href="/2023/07/25/geometry_understanding_of_homogeneous_coordinates/"/>
    <url>/2023/07/25/geometry_understanding_of_homogeneous_coordinates/</url>
    
    <content type="html"><![CDATA[<h3 id="代数理解"><a href="#代数理解" class="headerlink" title="代数理解"></a>代数理解</h3><p>对于为何引入齐次坐标，一般的分析文章都会从代数的角度出发，给出如下公式：<br>$$<br>\left[ \begin{array}{c}<br>    x\\<br>    y\\<br>    z\\<br>    1\\<br>\end{array} \right] \left[ \begin{array}{ccc:c}<br>    a_{11}&amp;a_{13}&amp;a_{13}&amp;t_x\\<br>    a_{21}&amp;a_{22}&amp;a_{23}&amp;t_y\\<br>    a_{31}&amp;a_{32}&amp;a_{33}&amp;t_z\\<br>    \hdashline<br>    0&amp;0&amp;0&amp;1\\<br>\end{array} \right] &#x3D;\left[ \begin{matrix}<br>    M&amp;T\\<br>    0&amp;1\\<br>\end{matrix} \right] \left[ \begin{array}{c}<br>    P\\<br>    1\\<br>\end{array} \right] &#x3D;\left[ \begin{array}{c}<br>    MP+T\\<br>    1\\<br>\end{array} \right]<br>$$</p><p>从式中可以看出，构造特殊的4维矩阵，就可以让计算之后的结果，正好是原来向量与左上角的3维矩阵相乘(MP)，再加上偏移变换T  </p><p>没毛病，但是如果能从几何的角度去解释这个事情，就可以更透彻的理解变换矩阵</p><h3 id="二维情况"><a href="#二维情况" class="headerlink" title="二维情况"></a>二维情况</h3><p>一个二维的点$(x, y)$, 加上第三个维度并赋值1，变为 $(x, y, 1)$, 其几何本质是把原来二维$xoy$平面上的点，看做三维空间中$z&#x3D;1$的平面上的点在$xoy$平面的投影：</p><img src="/2023/07/25/geometry_understanding_of_homogeneous_coordinates/hc1.jpg" class="" title="投影">  <p>如果把二维齐次坐标看作普通的三维向量，那么平移矩阵:<br>$$<br>\left[ \begin{matrix}<br>    1&amp;0&amp;t_x\\<br>    0&amp;1&amp;t_y\\<br>    0&amp;0&amp;1\\<br>\end{matrix} \right]<br>$$<br>其实表示的是三维空间中的一个切变，切变之后的物体投影到二维$xoy$平面，正好就是二维空间中的平移变换:</p><img src="/2023/07/25/geometry_understanding_of_homogeneous_coordinates/sheer.gif" class="" title="切变">  <p>我们知道，矩阵只能用来表示线性变换，而线性变换只有缩放、旋转、切变三种，所以不升维的情况下，同维的矩阵无法表示平移变换<br>通过提升一个维度，把高维的切变投影成低维的平移，就很好的解决了这个问题  </p><p>这也解释了另一个问题，就是$w$元素为什么为1时表示点，为0时表示方向：<br>因为切变操作会固定一个平面 ($z&#x3D;0$平面), 平移另一个平面 ($z&#x3D;1$平面)，如果点在移动的平面上(对应$w&#x3D;1$)，就会被移动，投影也会跟着移动，而点在静止平面上(对应$w&#x3D;0$)，就不会被移动，而方向向量恰好就是不会被移动的，如图：</p><img src="/2023/07/25/geometry_understanding_of_homogeneous_coordinates/dir.gif" class="" title="方向">  <p>此外，如果不升维的话，要表示平移变换，就只能 $MP+T$, 连续两次变换就是 $M_2(M_1P+T_1) + T_2$,三次以上就更麻烦<br>而使用高维齐次矩阵，连续的变换就可以仅用一次矩阵相乘解决，简洁高效</p><h3 id="三维情况"><a href="#三维情况" class="headerlink" title="三维情况"></a>三维情况</h3><p>到了三维，情况其实也是一样的，只不过由原来三维投影到二维，变成了四维投影到三维，而四维平移矩阵表示的也是四维空间中的一个切变</p><p>这里有个难点，就是我们可能不容易想象出四维空间中的切变的几何形状是什么样的，毕竟我们都是三维生物<br>要想清楚这一块其实也不难，首先我们得能在脑中构造出一个四维立方体  </p><p>设第四个坐标轴为$w$轴，直接想比较困难，我们可以先画出$w$轴不垂直于其它三轴的情形，然后再推到垂直的情况，就容易了：<br>先画出平移前后的两个胞体：</p><img src="/2023/07/25/geometry_understanding_of_homogeneous_coordinates/supercube1.jpg" class="" title="supercube1">  <p>再把8个顶点依次连线，就得了一个四维立方体的二维投影：</p><img src="/2023/07/25/geometry_understanding_of_homogeneous_coordinates/supercube2.jpg" class="" title="supercube2">  <p>我画的是不垂直的情况，网上找了张垂直的：</p><img src="/2023/07/25/geometry_understanding_of_homogeneous_coordinates/supercube3.jpg" class="" title="supercube3">  <p>观察这个投影，可以看到一个四维立方体有8个胞体，移动前后本身有两个，六个面各形成一个，加起来8个<br>类比三维中$z&#x3D;1$平面上的切变，四维空间中的切变，其实就是在$w&#x3D;1$的子空间上的切变，切变之后再投影到三维，就变成了平移</p>]]></content>
    
    
    <categories>
      
      <category>Mathematics for Computer Graphics</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Math</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>投影矩阵的推导过程</title>
    <link href="/2023/07/24/projection_matrix_calculation/"/>
    <url>/2023/07/24/projection_matrix_calculation/</url>
    
    <content type="html"><![CDATA[<p>目标如下图所示，把View Space的坐标映射到Clip Space: </p><img src="/2023/07/24/projection_matrix_calculation/map.png" class="" title="空间映射">                                         <p>这里先做一些前置说明：<br>设View Space (也可以叫做Eye Space)里的点坐标为 $\left( x_e, y_e, z_e, 1 \right) $<br>设Clip Space 里的点坐标为 $\left( x_c, y_c, z_c, w_c \right) $<br>设 NDC Space 里点的坐标为 $\left( x_n, y_n, z_n, 1 \right) $</p><p>同时不考虑viewport非中心对称的情况 (非中心对称时$x_e$和$x_c$并非线性关系)</p><p>以下为推导过程：</p><img src="/2023/07/24/projection_matrix_calculation/proc1.jpg" class="" title="proc1"><img src="/2023/07/24/projection_matrix_calculation/proc2.jpg" class="" title="proc2"><img src="/2023/07/24/projection_matrix_calculation/proc3.jpg" class="" title="proc3"><br/> <br/><p>同时观察$z_e$和$z_n$之前的映射关系:</p><img src="/2023/07/24/projection_matrix_calculation/proc4.jpg" class="" title="proc4"><br/> <br/><p>画个函数图像，绿色和红色$(n,f)$取值分别为 (1, 3), (1, 100):</p><img src="/2023/07/24/projection_matrix_calculation/z_map.jpg" class="" title="z_map"> <p>从图上可以看出：<br>相同$f$值的情况下，$z_e$越接近远平面，其变化引起$z_n$的变化越不明显<br>相同$z_e$值的情况下，$f$越小，变化率(导数)越大<br>这个特性和z-fighting相关，因为$f$较大的情况下，$z_e$的微小变动几乎不会引起$z_n$的变化</p><p>这里想到一点，就是depth buffer里存储的是perspective divide之后的z值，所以early depth test发生在<br>perspective divide之后</p>]]></content>
    
    
    <categories>
      
      <category>Mathematics for Computer Graphics</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Math</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>对法线变换矩阵的理解</title>
    <link href="/2023/07/23/understanding_normal_transform_matrix/"/>
    <url>/2023/07/23/understanding_normal_transform_matrix/</url>
    
    <content type="html"><![CDATA[<p>tangent向量($T$)表示和surface平行的向量，在三角形中可以用两个vertex的差计算，<br>所以T的变换矩阵和vertex的一样，但法线($N$)不同，由于有切变的存在，如果还用相同的矩阵左乘，变换之后的法线将不再和原来的surface垂直:  </p><img src="/2023/07/23/understanding_normal_transform_matrix/error.jpg" class="" title="错误情况"><br/><br/><p>为了确保变换之后的法线依然垂直于surface, 可以从如下条件出发进行推导:<br>$$<br>N\cdot T&#x3D;N^{\prime}\cdot T^{\prime}&#x3D;0<br>$$</p><p>推导过程：  </p><img src="/2023/07/23/understanding_normal_transform_matrix/normal_transform.jpg" class="" title="过程推导"><br/><br/><p>最终有：<br>$$<br>G&#x3D;\left( M^{-1} \right) ^T<br>$$</p><p>即法线的变换矩阵是原矩阵的逆转置(inverse transpose)  </p><p>如果原矩阵是正交矩阵，那么有：<br>$$<br>M^{-1}&#x3D;M^T<br>$$<br>代入上式可得：<br>$$<br>G&#x3D;M<br>$$<br>也就是说如果原来是正交变换，那么法线可以直接用原来的矩阵变换  </p><p>其实几何上是因为，正交矩阵行向量与列向量皆为正交的单位向量，所代表的变换只能是旋转或镜像，有保证原始图形不变形的特性，叫做保距映射，那么因为原来的图形没有变形，法线自然也就不用特殊处理</p>]]></content>
    
    
    <categories>
      
      <category>Mathematics for Computer Graphics</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Math</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
